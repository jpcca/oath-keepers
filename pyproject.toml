[tool.setuptools]
packages = ["oath_keepers"]

[project]
dependencies = [
  "deeponto>=0.9.3",
  "matplotlib>=3.10.6",
  "fast-agent-mcp>=0.2.49",
  "whisperlivekit>=0.2.12",
]
description = "Add your description here"
name = "oath-keepers"
readme = "README.md"
requires-python = ">=3.12"
version = "0.1.0"

[project.optional-dependencies]
cpu = [
  "torch>=2.8.0",
  "torchaudio>=2.8.0",
  "torchvision>=0.23.0",
  # vllm installed with cpu.sh
]
gpu = [
  "torch>=2.8.0",
  "torchaudio>=2.8.0",
  "torchvision>=0.23.0",
  "vllm>=0.10.0",
]
dev = [
  "debugpy>=1.8.15",
  "pytest>=8.4.1",
  "ruff>=0.12.2",
]

[tool.uv]
conflicts = [
  [
    { extra = "cpu" },
    { extra = "gpu" },
  ],
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
ignore = ["E501", "E402"]
select = [
  "E", # pycodestyle errors
  "F", # pyflakes
  "I", # isort
  "TCH", # type checking
]

# More lenient settings for existing code
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN"] # Don't require type annotations in tests

[dependency-groups]
dev = [
    "ruff>=0.12.2",
]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu128", extra = "gpu" },
]
torchvision = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu128", extra = "gpu" },
]
torchaudio = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu128", extra = "gpu" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true